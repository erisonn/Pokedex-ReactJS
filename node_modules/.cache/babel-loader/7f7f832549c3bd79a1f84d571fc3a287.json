{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst useApiRequest = () => {\n  _s();\n\n  const [url, setUrl] = useState('https://pokeapi.co/api/v2/pokemon?limit=20');\n  const [next, setNext] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [pokemons, setPokemons] = useState([]);\n\n  const loadPokemons = () => {\n    if (error) {\n      setError(null);\n      setIsLoading(true);\n    }\n\n    fetch(url).then(response => response.json()).then(PokemonData => {\n      setNext(PokemonData.next);\n\n      if (PokemonData.previous === null) {\n        setPokemons(PokemonData.results);\n      } else {\n        setPokemons([...pokemons, ...PokemonData.results]);\n      }\n    }).catch(error => {\n      console.log(error);\n      setError('Error on load.');\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  };\n\n  const loadMore = () => {\n    setUrl(next);\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    loadPokemons();\n  }, [url]);\n  return {\n    url,\n    next,\n    isLoading,\n    error,\n    pokemons,\n    loadMore,\n    loadPokemons\n  };\n};\n\n_s(useApiRequest, \"XlOxUn+h5PXy1oQH2sjb275AIK8=\");\n\nexport default useApiRequest;","map":{"version":3,"sources":["/home/erison/Documents/Projetos/Pokedex-ReactJS/src/components/hooks/useApiRequest.js"],"names":["useState","useEffect","useApiRequest","url","setUrl","next","setNext","isLoading","setIsLoading","error","setError","pokemons","setPokemons","loadPokemons","fetch","then","response","json","PokemonData","previous","results","catch","console","log","finally","loadMore"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAExB,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBJ,QAAQ,CAAC,4CAAD,CAA9B;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMa,YAAY,GAAG,MAAM;AACvB,QAAGJ,KAAH,EAAU;AACNC,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAF,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACH;;AACDM,IAAAA,KAAK,CAACX,GAAD,CAAL,CACCY,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,WAAW,IAAI;AACjBZ,MAAAA,OAAO,CAACY,WAAW,CAACb,IAAb,CAAP;;AACA,UAAIa,WAAW,CAACC,QAAZ,KAAyB,IAA7B,EAAmC;AAC/BP,QAAAA,WAAW,CAACM,WAAW,CAACE,OAAb,CAAX;AACH,OAFD,MAEO;AACHR,QAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAc,GAAGO,WAAW,CAACE,OAA7B,CAAD,CAAX;AACH;AACJ,KATD,EAUCC,KAVD,CAUOZ,KAAK,IAAI;AACZa,MAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AACAC,MAAAA,QAAQ,CAAC,gBAAD,CAAR;AACH,KAbD,EAcCc,OAdD,CAcS,MAAM;AACXhB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAhBD;AAiBH,GAtBD;;AAwBA,QAAMiB,QAAQ,GAAG,MAAM;AACnBrB,IAAAA,MAAM,CAACC,IAAD,CAAN;AACH,GAFD;;AAIAJ,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEAK,IAAAA,YAAY;AACf,GAJQ,EAIN,CAACV,GAAD,CAJM,CAAT;AAMA,SAAO;AAACA,IAAAA,GAAD;AAAME,IAAAA,IAAN;AAAYE,IAAAA,SAAZ;AAAuBE,IAAAA,KAAvB;AAA8BE,IAAAA,QAA9B;AAAwCc,IAAAA,QAAxC;AAAkDZ,IAAAA;AAAlD,GAAP;AAEH,CA5CD;;GAAMX,a;;AA8CN,eAAeA,aAAf","sourcesContent":["import { useState, useEffect } from \"react\"\n\nconst useApiRequest = () => {\n\n    const [url, setUrl] = useState('https://pokeapi.co/api/v2/pokemon?limit=20')\n    const [next, setNext] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n    const [error, setError] = useState(null)\n    const [pokemons, setPokemons] = useState([])\n\n    const loadPokemons = () => {\n        if(error) {\n            setError(null)\n            setIsLoading(true)\n        }\n        fetch(url)\n        .then(response => response.json())\n        .then(PokemonData => {\n            setNext(PokemonData.next)\n            if (PokemonData.previous === null) {\n                setPokemons(PokemonData.results)\n            } else {\n                setPokemons([...pokemons, ...PokemonData.results])\n            }\n        })\n        .catch(error => {\n            console.log(error)\n            setError('Error on load.')\n        })\n        .finally(() => {\n            setIsLoading(false)\n        })\n    }\n\n    const loadMore = () => {\n        setUrl(next)\n    }\n\n    useEffect(() => {\n        setIsLoading(true)\n\n        loadPokemons()\n    }, [url])\n\n    return {url, next, isLoading, error, pokemons, loadMore, loadPokemons}\n\n}\n\nexport default useApiRequest;"]},"metadata":{},"sourceType":"module"}