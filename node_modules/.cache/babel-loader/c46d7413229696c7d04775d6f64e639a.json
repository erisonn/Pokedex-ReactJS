{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nconst useInfiniteScroll = (next, callback) => {\n  _s();\n\n  const [isBottom, setisBottom] = useState(false);\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n  useEffect(() => {\n    if (!isBottom) return;\n\n    if (next) {\n      callback(() => {\n        console.log('called back');\n      });\n    }\n\n    ;\n  }, [isBottom]);\n\n  function handleScroll() {\n    if (window.innerHeight + document.documentElement.scrollTop !== document.documentElement.offsetHeight - 200 || isBottom) return;\n    setisBottom(true);\n  }\n\n  return [isBottom, setisBottom];\n};\n\n_s(useInfiniteScroll, \"q6810aZRdwAsSGRpvJ8qgwT5EuI=\");\n\nexport default useInfiniteScroll;","map":{"version":3,"sources":["/home/erison/Documents/Projetos/Pokedex-ReactJS/src/hooks/useInfiniteScroll.js"],"names":["useState","useEffect","useInfiniteScroll","next","callback","isBottom","setisBottom","window","addEventListener","handleScroll","removeEventListener","console","log","innerHeight","document","documentElement","scrollTop","offsetHeight"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,iBAAiB,GAAG,CAACC,IAAD,EAAOC,QAAP,KAAoB;AAAA;;AAC5C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCC,YAAlC;AACA,WAAO,MAAMF,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqCD,YAArC,CAAb;AACD,GAHQ,EAGN,EAHM,CAAT;AAKAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACI,QAAL,EAAe;;AACf,QAAGF,IAAH,EAAS;AACLC,MAAAA,QAAQ,CAAC,MAAM;AACXO,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACH,OAFO,CAAR;AAGH;;AAAA;AACF,GAPQ,EAON,CAACP,QAAD,CAPM,CAAT;;AASA,WAASI,YAAT,GAAwB;AACtB,QAAIF,MAAM,CAACM,WAAP,GAAqBC,QAAQ,CAACC,eAAT,CAAyBC,SAA9C,KAA4DF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAApG,IAA2GZ,QAA/G,EAAyH;AACzHC,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD;;AAED,SAAO,CAACD,QAAD,EAAWC,WAAX,CAAP;AACD,CAvBD;;GAAMJ,iB;;AAyBN,eAAeA,iBAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useInfiniteScroll = (next, callback) => {\n  const [isBottom, setisBottom] = useState(false);\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  useEffect(() => {\n    if (!isBottom) return;\n    if(next) {\n        callback(() => {\n            console.log('called back');\n        })\n    };\n  }, [isBottom]);\n\n  function handleScroll() {\n    if (window.innerHeight + document.documentElement.scrollTop !== document.documentElement.offsetHeight - 200 || isBottom) return;\n    setisBottom(true);\n  }\n\n  return [isBottom, setisBottom];\n};\n\nexport default useInfiniteScroll;"]},"metadata":{},"sourceType":"module"}