{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst useApiRequest = url => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(null);\n  const [itemData, setItemData] = useState([]);\n  useEffect(() => {\n    setIsLoading(true);\n    fetch(url).then(response => response.json()).then(data => {\n      return {\n        'name': data.name,\n        'img': data.sprites.front_default\n      };\n    }).then(data => {\n      setItemData(data);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  }, [url]);\n  return {\n    pokemonDetail,\n    isLoading\n  };\n};\n\n_s(useApiRequest, \"K8ay1Datk+7ME6stbXMk7CdGLI8=\");\n\nexport default useApiRequest;","map":{"version":3,"sources":["/home/erison/Documents/Projetos/pokeapi/src/components/hooks/useApiRequest.js"],"names":["useState","useEffect","useApiRequest","url","isLoading","setIsLoading","itemData","setItemData","fetch","then","response","json","data","name","sprites","front_default","finally","pokemonDetail"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,aAAa,GAAGC,GAAG,IAAI;AAAA;;AAEzB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAG,IAAAA,KAAK,CAACL,GAAD,CAAL,CACCM,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAI;AACV,aAAO;AACH,gBAAQA,IAAI,CAACC,IADV;AAEH,eAAQD,IAAI,CAACE,OAAL,CAAaC;AAFlB,OAAP;AAIH,KAPD,EAQCN,IARD,CAQMG,IAAI,IAAI;AACVL,MAAAA,WAAW,CAACK,IAAD,CAAX;AACH,KAVD,EAWCI,OAXD,CAWS,MAAM;AACXX,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAbD;AAcH,GAhBQ,EAgBN,CAACF,GAAD,CAhBM,CAAT;AAkBA,SAAO;AAAEc,IAAAA,aAAF;AAAiBb,IAAAA;AAAjB,GAAP;AACH,CAxBD;;GAAMF,a;;AAyBN,eAAeA,aAAf","sourcesContent":["import { useState, useEffect } from \"react\"\n\nconst useApiRequest = url => {\n\n    const [isLoading, setIsLoading] = useState(null)\n    const [itemData, setItemData] = useState([])\n\n    useEffect(() => {\n        setIsLoading(true)\n        fetch(url)\n        .then(response => response.json())\n        .then(data => {\n            return {\n                'name': data.name,\n                'img' : data.sprites.front_default\n            }\n        })\n        .then(data => {\n            setItemData(data)\n        })\n        .finally(() => {\n            setIsLoading(false)\n        })\n    }, [url])\n\n    return { pokemonDetail, isLoading }\n}\nexport default useApiRequest;"]},"metadata":{},"sourceType":"module"}