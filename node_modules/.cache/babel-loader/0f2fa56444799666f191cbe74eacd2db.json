{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport capitalizeFirstLetter from '../utils/helpers';\n\nconst useDetailsRequest = url => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [itemData, setItemData] = useState([]);\n  const [itemLink, setItemLink] = useState('');\n  const [error, setError] = useState(null);\n\n  const loadDetails = () => {\n    if (error) {\n      setError(null);\n      setIsLoading(true);\n    }\n\n    fetch(url).then(response => response.json()).then(data => {\n      return {\n        'name': capitalizeFirstLetter(data.name),\n        'img': data.sprites.other['official-artwork'].front_default,\n        'id': data.id,\n        'types': [{\n          'type': {\n            'name': itemData.height\n          },\n          'slot': 1\n        }, {\n          'type': {\n            'name': itemData.weight\n          },\n          'slot': 2\n        }, {\n          'type': {\n            'name': itemData.ability\n          },\n          'slot': 3\n        }],\n        'weight': 'Weight: ' + data.weight / 10 + ' kg',\n        'height': 'Height: ' + data.height / 10 + ' m',\n        'ability': 'Ability: ' + capitalizeFirstLetter(data.abilities[0].ability.name),\n        'stats': data.stats\n      };\n    }).then(data => {\n      setItemData(data);\n      setItemLink(`/pokemon/${data.id}`);\n    }).catch(error => {\n      console.log(error);\n      setError('Error on load.');\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  };\n\n  useEffect(() => {\n    loadDetails();\n  }, [url]);\n  return {\n    itemData,\n    itemLink,\n    isLoading,\n    error,\n    loadDetails\n  };\n};\n\n_s(useDetailsRequest, \"oEVt+QVPhHM5V/DuJYtC4T1/xYY=\");\n\nexport default useDetailsRequest;","map":{"version":3,"sources":["/home/erison/Documents/Projetos/Pokedex-ReactJS/src/hooks/useDetailsRequest.js"],"names":["useState","useEffect","capitalizeFirstLetter","useDetailsRequest","url","isLoading","setIsLoading","itemData","setItemData","itemLink","setItemLink","error","setError","loadDetails","fetch","then","response","json","data","name","sprites","other","front_default","id","height","weight","ability","abilities","stats","catch","console","log","finally"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,qBAAP,MAAkC,kBAAlC;;AAEA,MAAMC,iBAAiB,GAAGC,GAAG,IAAI;AAAA;;AAE7B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMa,WAAW,GAAG,MAAM;AACtB,QAAGF,KAAH,EAAU;AACNC,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAN,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACH;;AACDQ,IAAAA,KAAK,CAACV,GAAD,CAAL,CACCW,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAI;AACV,aAAO;AACH,gBAAQhB,qBAAqB,CAACgB,IAAI,CAACC,IAAN,CAD1B;AAEH,eAAQD,IAAI,CAACE,OAAL,CAAaC,KAAb,CAAmB,kBAAnB,EAAuCC,aAF5C;AAGH,cAAMJ,IAAI,CAACK,EAHR;AAIH,iBAAU,CAAC;AAAC,kBAAQ;AAAC,oBAAQhB,QAAQ,CAACiB;AAAlB,WAAT;AAAoC,kBAAS;AAA7C,SAAD,EAAkD;AAAC,kBAAQ;AAAC,oBAAQjB,QAAQ,CAACkB;AAAlB,WAAT;AAAoC,kBAAS;AAA7C,SAAlD,EAAmG;AAAC,kBAAQ;AAAC,oBAAQlB,QAAQ,CAACmB;AAAlB,WAAT;AAAqC,kBAAS;AAA9C,SAAnG,CAJP;AAKH,kBAAU,aAAaR,IAAI,CAACO,MAAL,GAAY,EAAzB,GAA8B,KALrC;AAMH,kBAAU,aAAaP,IAAI,CAACM,MAAL,GAAY,EAAzB,GAA8B,IANrC;AAOH,mBAAW,cAActB,qBAAqB,CAACgB,IAAI,CAACS,SAAL,CAAe,CAAf,EAAkBD,OAAlB,CAA0BP,IAA3B,CAP3C;AAQH,iBAASD,IAAI,CAACU;AARX,OAAP;AAUH,KAbD,EAcCb,IAdD,CAcMG,IAAI,IAAI;AACVV,MAAAA,WAAW,CAACU,IAAD,CAAX;AACAR,MAAAA,WAAW,CAAE,YAAWQ,IAAI,CAACK,EAAG,EAArB,CAAX;AACH,KAjBD,EAkBCM,KAlBD,CAkBOlB,KAAK,IAAI;AACZmB,MAAAA,OAAO,CAACC,GAAR,CAAYpB,KAAZ;AACAC,MAAAA,QAAQ,CAAC,gBAAD,CAAR;AACH,KArBD,EAsBCoB,OAtBD,CAsBS,MAAM;AACX1B,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAxBD;AAyBH,GA9BD;;AA+BAL,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,WAAW;AACd,GAFQ,EAEN,CAACT,GAAD,CAFM,CAAT;AAIA,SAAO;AAAEG,IAAAA,QAAF;AAAYE,IAAAA,QAAZ;AAAsBJ,IAAAA,SAAtB;AAAiCM,IAAAA,KAAjC;AAAwCE,IAAAA;AAAxC,GAAP;AACH,CA3CD;;GAAMV,iB;;AA4CN,eAAeA,iBAAf","sourcesContent":["import { useState, useEffect } from \"react\"\nimport capitalizeFirstLetter from '../utils/helpers'\n\nconst useDetailsRequest = url => {\n\n    const [isLoading, setIsLoading] = useState(true)\n    const [itemData, setItemData] = useState([])\n    const [itemLink, setItemLink] = useState('')\n    const [error, setError] = useState(null)\n  \n    const loadDetails = () => {\n        if(error) {\n            setError(null)\n            setIsLoading(true)\n        }\n        fetch(url)\n        .then(response => response.json())\n        .then(data => {\n            return {\n                'name': capitalizeFirstLetter(data.name),\n                'img' : data.sprites.other['official-artwork'].front_default,\n                'id': data.id,\n                'types' : [{'type': {'name': itemData.height}, 'slot' : 1}, {'type': {'name': itemData.weight}, 'slot' : 2}, {'type': {'name': itemData.ability}, 'slot' : 3}],\n                'weight': 'Weight: ' + data.weight/10 + ' kg',\n                'height': 'Height: ' + data.height/10 + ' m',\n                'ability': 'Ability: ' + capitalizeFirstLetter(data.abilities[0].ability.name),\n                'stats': data.stats\n            }\n        })\n        .then(data => {\n            setItemData(data)\n            setItemLink(`/pokemon/${data.id}`)\n        })\n        .catch(error => {\n            console.log(error)\n            setError('Error on load.')\n        })\n        .finally(() => {\n            setIsLoading(false)\n        })\n    }\n    useEffect(() => {\n        loadDetails()\n    }, [url])\n\n    return { itemData, itemLink, isLoading, error, loadDetails }\n}\nexport default useDetailsRequest;"]},"metadata":{},"sourceType":"module"}