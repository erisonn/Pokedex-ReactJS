{"ast":null,"code":"var _jsxFileName = \"/home/erison/Documents/Projetos/pokeapi/src/pages/Home.js\",\n    _s = $RefreshSig$();\n\nimport { react } from \"@babel/types\";\nimport React, { useEffect, useState } from \"react\";\nimport ListWrapper from \"../components/ListWrapper\";\nimport Loading from \"../components/Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(null);\n  const [pokemons, setPokemons] = useState([]);\n  const [pokemonsDetails, setPokemonsDetails] = useState([]);\n\n  const loadPokemons = () => {\n    fetch('https://pokeapi.co/api/v2/pokemon?limit=5').then(response => response.json()).then(data => {\n      setPokemons(data.results);\n      data.results.map(result => {\n        fetch(result.url).then(resultDetails => resultDetails.json()).then(resultDetails => {\n          setPokemonsDetails([...res]);\n        });\n      });\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    loadPokemons();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(ListWrapper, {\n      data: pokemons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"mdH0J3XU2SBQyOm95DvcnKCftKU=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/erison/Documents/Projetos/pokeapi/src/pages/Home.js"],"names":["react","React","useEffect","useState","ListWrapper","Loading","Home","isLoading","setIsLoading","pokemons","setPokemons","pokemonsDetails","setPokemonsDetails","loadPokemons","fetch","then","response","json","data","results","map","result","url","resultDetails","res","finally"],"mappings":";;;AAAA,SAASA,KAAT,QAAsB,cAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEf,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAC,EAAD,CAAtD;;AAEA,QAAMU,YAAY,GAAG,MAAM;AACvBC,IAAAA,KAAK,CAAC,2CAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAI;AACVR,MAAAA,WAAW,CAACQ,IAAI,CAACC,OAAN,CAAX;AACAD,MAAAA,IAAI,CAACC,OAAL,CAAaC,GAAb,CAAiBC,MAAM,IAAI;AACvBP,QAAAA,KAAK,CAACO,MAAM,CAACC,GAAR,CAAL,CACCP,IADD,CACMQ,aAAa,IAAIA,aAAa,CAACN,IAAd,EADvB,EAECF,IAFD,CAEMQ,aAAa,IAAI;AACnBX,UAAAA,kBAAkB,CAAC,CAAC,GAAGY,GAAJ,CAAD,CAAlB;AACH,SAJD;AAKH,OAND;AAOH,KAXD,EAYCC,OAZD,CAYS,MAAM;AACXjB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAdD;AAeH,GAhBD;;AAkBAN,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEAK,IAAAA,YAAY;AACf,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,eACKN,SAAS,iBAAI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADlB,eAEI,QAAC,WAAD;AAAa,MAAA,IAAI,EAAEE;AAAnB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CApCD;;GAAMH,I;;KAAAA,I;AAsCN,eAAeA,IAAf","sourcesContent":["import { react } from \"@babel/types\";\nimport React, { useEffect, useState } from \"react\";\nimport ListWrapper from \"../components/ListWrapper\";\nimport Loading from \"../components/Loading\";\n\nconst Home = () => {\n\n    const [isLoading, setIsLoading] = useState(null)\n    const [pokemons, setPokemons] = useState([])\n    const [pokemonsDetails, setPokemonsDetails] = useState([])\n\n    const loadPokemons = () => {\n        fetch('https://pokeapi.co/api/v2/pokemon?limit=5')\n        .then(response => response.json())\n        .then(data => {\n            setPokemons(data.results)\n            data.results.map(result => {\n                fetch(result.url)\n                .then(resultDetails => resultDetails.json())\n                .then(resultDetails => {\n                    setPokemonsDetails([...res])\n                })\n            })\n        })\n        .finally(() => {\n            setIsLoading(false)\n        })\n    }\n\n    useEffect(() => {\n        setIsLoading(true)\n\n        loadPokemons()\n    }, [])\n\n    return ( \n        <React.Fragment>\n            {isLoading && <Loading/>}\n            <ListWrapper data={pokemons}/>\n        </React.Fragment>\n    );\n}\n \nexport default Home;"]},"metadata":{},"sourceType":"module"}