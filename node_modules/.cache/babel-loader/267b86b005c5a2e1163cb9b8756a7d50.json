{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect, useCallback } from 'react';\n\nconst useInfiniteScroll = (next, callback) => {\n  _s();\n\n  const [isBottom, setisBottom] = useState(false);\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n  useEffect(() => {\n    if (!isBottom) return;\n\n    if (next) {\n      callback();\n    }\n\n    ;\n  }, [isBottom, callback, next]);\n  const handleScroll = useCallback(() => {\n    if (window.innerHeight + document.documentElement.scrollTop !== document.documentElement.offsetHeight || isBottom) return;\n    setisBottom(true);\n  }, [isBottom]);\n  return [isBottom, setisBottom];\n};\n\n_s(useInfiniteScroll, \"fDOg9UzwSTFuQTwOmJ/7fCWolfw=\");\n\nexport default useInfiniteScroll;","map":{"version":3,"sources":["/home/erison/Documents/Projetos/Pokedex-ReactJS/src/hooks/useInfiniteScroll.js"],"names":["useState","useEffect","useCallback","useInfiniteScroll","next","callback","isBottom","setisBottom","window","addEventListener","handleScroll","removeEventListener","innerHeight","document","documentElement","scrollTop","offsetHeight"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD;;AAEA,MAAMC,iBAAiB,GAAG,CAACC,IAAD,EAAOC,QAAP,KAAoB;AAAA;;AAC5C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,KAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCC,YAAlC;AACA,WAAO,MAAMF,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqCD,YAArC,CAAb;AACD,GAHQ,EAGN,EAHM,CAAT;AAKAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACK,QAAL,EAAe;;AACf,QAAGF,IAAH,EAAS;AACLC,MAAAA,QAAQ;AACX;;AAAA;AACF,GALQ,EAKN,CAACC,QAAD,EAAWD,QAAX,EAAqBD,IAArB,CALM,CAAT;AAOA,QAAMM,YAAY,GAAGR,WAAW,CAAC,MAAM;AACrC,QAAIM,MAAM,CAACI,WAAP,GAAqBC,QAAQ,CAACC,eAAT,CAAyBC,SAA9C,KAA4DF,QAAQ,CAACC,eAAT,CAAyBE,YAArF,IAAqGV,QAAzG,EAAmH;AACnHC,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAH+B,EAG7B,CAACD,QAAD,CAH6B,CAAhC;AAKA,SAAO,CAACA,QAAD,EAAWC,WAAX,CAAP;AACD,CArBD;;GAAMJ,iB;;AAuBN,eAAeA,iBAAf","sourcesContent":["import { useState, useEffect, useCallback } from 'react';\n\nconst useInfiniteScroll = (next, callback) => {\n  const [isBottom, setisBottom] = useState(false)\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll)\n    return () => window.removeEventListener('scroll', handleScroll)\n  }, [])\n\n  useEffect(() => {\n    if (!isBottom) return;\n    if(next) {\n        callback()\n    };\n  }, [isBottom, callback, next])\n\n  const handleScroll = useCallback(() => {\n    if (window.innerHeight + document.documentElement.scrollTop !== document.documentElement.offsetHeight || isBottom) return;\n    setisBottom(true)\n  }, [isBottom])\n\n  return [isBottom, setisBottom]\n}\n\nexport default useInfiniteScroll"]},"metadata":{},"sourceType":"module"}