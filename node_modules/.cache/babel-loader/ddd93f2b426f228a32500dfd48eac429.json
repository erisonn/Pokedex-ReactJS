{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst useDetailsRequest = url => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [itemData, setItemData] = useState([]);\n  const [itemLink, setItemLink] = useState('');\n  const [error, setError] = useState(null);\n\n  const capitalizeFirstLetter = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  const loadDetails = () => {};\n\n  useEffect(() => {}, [url]);\n  return {\n    itemData,\n    itemLink,\n    isLoading,\n    error\n  };\n};\n\n_s(useDetailsRequest, \"oEVt+QVPhHM5V/DuJYtC4T1/xYY=\");\n\nexport default useDetailsRequest;","map":{"version":3,"sources":["/home/erison/Documents/Projetos/Pokedex-ReactJS/src/components/hooks/useDetailsRequest.js"],"names":["useState","useEffect","useDetailsRequest","url","isLoading","setIsLoading","itemData","setItemData","itemLink","setItemLink","error","setError","capitalizeFirstLetter","string","charAt","toUpperCase","slice","loadDetails"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,iBAAiB,GAAGC,GAAG,IAAI;AAAA;;AAE7B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMY,qBAAqB,GAAIC,MAAD,IAAY;AACtC,WAAOA,MAAM,CAACC,MAAP,CAAc,CAAd,EAAiBC,WAAjB,KAAiCF,MAAM,CAACG,KAAP,CAAa,CAAb,CAAxC;AACD,GAFH;;AAIA,QAAMC,WAAW,GAAG,MAAM,CAEzB,CAFD;;AAGAhB,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEN,CAACE,GAAD,CAFM,CAAT;AAIA,SAAO;AAAEG,IAAAA,QAAF;AAAYE,IAAAA,QAAZ;AAAsBJ,IAAAA,SAAtB;AAAiCM,IAAAA;AAAjC,GAAP;AACH,CAnBD;;GAAMR,iB;;AAoBN,eAAeA,iBAAf","sourcesContent":["import { useState, useEffect } from \"react\"\n\nconst useDetailsRequest = url => {\n\n    const [isLoading, setIsLoading] = useState(true)\n    const [itemData, setItemData] = useState([])\n    const [itemLink, setItemLink] = useState('')\n    const [error, setError] = useState(null)\n\n    const capitalizeFirstLetter = (string) => {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n      }\n      \n    const loadDetails = () => {\n\n    }\n    useEffect(() => {\n        \n    }, [url])\n\n    return { itemData, itemLink, isLoading, error }\n}\nexport default useDetailsRequest;"]},"metadata":{},"sourceType":"module"}